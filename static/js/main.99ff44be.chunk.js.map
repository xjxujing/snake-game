{"version":3,"sources":["App.js","components/GameStart/index.js","components/Food/index.js","components/Snake/index.js","assert/control.png","components/Control/index.js","components/Cover/index.js","components/GameOver/index.js","audio/click.ogg","audio/gameover.ogg","reportWebVitals.js","index.js"],"names":["timeoutInstance","GameStart","memo","props","className","style","display","gameState","onClick","onGameStart","type","String","highScore","padStart","Food","food","left","top","Snake","snakeBody","map","dot","dotIndex","transform","Control","showScore","score","this","direction","lineHeight","changeSpeed","clickDirection","src","control","alt","onGameStateChange","Component","Cover","state","reStartGame","GameOver","clear","tm","clearTimeout","initialState","generateFoodCoordinate","time","aspectRatio","W","document","documentElement","clientWidth","H","clientHeight","toFixed","calcViewportAspectRatio","buttonVoice","Audio","buttonWav","overVoice","overWav","Math","floor","random","localHighScore","localStorage","getItem","App","componentDidUpdate","checkIsOut","checkIsEatFood","checkIsTouchSelf","currentDirection","play","setState","controlDirection","key","keysMap","Object","keys","includes","moveSnake","body","head","length","moveHead","push","shift","setTimeout","onGameOver","newSnake","unshift","pop","forEach","item","currentTime","changeGameState","setItem","onGameContinue","onGamePause","addEventListener","bind","removeEventListener","direc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99ff44be.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport GameStart from './components/GameStart'\r\nimport Food from './components/Food';\r\nimport Snake from './components/Snake';\r\nimport Control from './components/Control'\r\nimport Cover from './components/Cover'\r\nimport GameOver from './components/GameOver'\r\nimport buttonWav from './audio/click.ogg'\r\nimport overWav from './audio/gameover.ogg'\r\n\r\nlet timeoutInstance;\r\n\r\nconst clear = (tm) => {\r\n  if (tm) clearTimeout(tm);\r\n};\r\n\r\nconst STEP = 4\r\nconst initialState = {\r\n  snakeBody: [\r\n    [0, 0],\r\n    [STEP, 0],\r\n  ],\r\n  food: generateFoodCoordinate(),\r\n  direction: 'RIGHT',\r\n  time: 500,\r\n  gameState: 'START', // OVER | CONTINUE | PAUSE | START\r\n  aspectRatio: calcViewportAspectRatio(),\r\n  score: 0\r\n}\r\n\r\nlet buttonVoice = new Audio(buttonWav)\r\nlet overVoice = new Audio(overWav)\r\n\r\nfunction calcViewportAspectRatio() {\r\n  const W = document.documentElement.clientWidth\r\n  const H = document.documentElement.clientHeight\r\n  return (W / H).toFixed(2) >= 0.56\r\n}\r\n\r\n// 食物坐标 x, y 是 0 ~ 96 之间 的偶数\r\nfunction generateFoodCoordinate() {\r\n  const MAX = 98\r\n  const MIN = 1\r\n  const x = Math.floor((Math.random() * MAX + MIN) / STEP) * STEP\r\n  const y = Math.floor((Math.random() * MAX + MIN) / STEP) * STEP\r\n  return [x, y]\r\n}\r\n\r\nconst localHighScore = localStorage.getItem('snake-game-high-score')\r\n\r\nclass App extends Component {\r\n\r\n  state = { ...initialState, highScore: localHighScore ? localHighScore : 0}\r\n\r\n\r\n  componentDidMount() {\r\n    \r\n    document.addEventListener('keydown', this.controlDirection.bind(this))\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.state.gameState === 'OVER') return\r\n    this.checkIsOut()\r\n    this.checkIsEatFood()\r\n    this.checkIsTouchSelf()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.controlDirection.bind(this))\r\n  }\r\n\r\n  clickDirection = (direction) => {\r\n    const currentDirection = this.state.direction\r\n    if (currentDirection === direction) return\r\n\r\n    if (currentDirection === 'LEFT' && direction === 'RIGHT') return\r\n    if (direction === 'LEFT' && currentDirection === 'RIGHT') return\r\n\r\n    if (currentDirection === 'UP' && direction === 'DOWN') return\r\n    if (direction === 'UP' && currentDirection === 'DOWN') return\r\n\r\n    buttonVoice.play()\r\n    this.setState({ direction })\r\n  }\r\n\r\n  controlDirection = ({ key }) => {\r\n    const keysMap = {\r\n      'ArrowUp': 'UP',\r\n      'ArrowDown': 'DOWN',\r\n      'ArrowRight': 'RIGHT',\r\n      'ArrowLeft': 'LEFT',\r\n    }\r\n    if (!Object.keys(keysMap).includes(key)) return\r\n    this.clickDirection(keysMap[key])\r\n  }\r\n\r\n  moveSnake = () => {\r\n    clear(timeoutInstance)\r\n    if (this.state.gameState === 'OVER') return\r\n\r\n    const body = [...this.state.snakeBody]\r\n    const head = body[body.length - 1]\r\n\r\n    const directionMap = {\r\n      'UP': [head[0], head[1] - STEP],\r\n      'DOWN': [head[0], head[1] + STEP],\r\n      'RIGHT': [head[0] + STEP, head[1]],\r\n      'LEFT': [head[0] - STEP, head[1]]\r\n    }\r\n\r\n    const moveHead = directionMap[this.state.direction]\r\n    body.push(moveHead)\r\n    body.shift()\r\n    this.setState({ snakeBody: body })\r\n\r\n    timeoutInstance = setTimeout(this.moveSnake, this.state.time)\r\n  }\r\n\r\n  checkIsOut = () => {\r\n    const head = this.state.snakeBody[this.state.snakeBody.length - 1]\r\n    // debugger\r\n\r\n    if (head[0] >= 100 ||\r\n      head[1] >= 100 ||\r\n      head[0] < 0 ||\r\n      head[1] < 0) {\r\n      this.onGameOver()\r\n    }\r\n  }\r\n\r\n  checkIsEatFood = () => {\r\n    const head = this.state.snakeBody[this.state.snakeBody.length - 1]\r\n    const food = this.state.food\r\n\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      let newSnake = [...this.state.snakeBody];\r\n      newSnake.unshift([]);\r\n\r\n      const score = (newSnake.length - 2) * 5\r\n      this.setState({\r\n        food: generateFoodCoordinate(),\r\n        snakeBody: newSnake,\r\n        score\r\n      })\r\n\r\n      this.changeSpeed('SPEED_UP')\r\n    }\r\n  }\r\n\r\n  checkIsTouchSelf = () => {\r\n    const body = [...this.state.snakeBody]\r\n    const head = body.pop()\r\n    body.forEach(item => {\r\n      if (item[0] === head[0] && item[1] === head[1]) {\r\n        this.onGameOver()\r\n      }\r\n    })\r\n  }\r\n\r\n  changeSpeed = (type) => {\r\n    const currentTime = this.state.time\r\n\r\n    if (type === 'SPEED_UP') {\r\n      if (currentTime < 300) return\r\n      buttonVoice.play()\r\n      this.setState({ time: currentTime - 100 })\r\n    } else {\r\n      if (currentTime > 800) return\r\n      buttonVoice.play()\r\n      this.setState({ time: currentTime + 100 })\r\n    }\r\n  }\r\n\r\n  onGameStart = () => {\r\n    buttonVoice.play()\r\n    this.changeGameState('CONTINUE')\r\n    this.moveSnake()\r\n  }\r\n\r\n  reStartGame = () => {\r\n    this.changeGameState('START')\r\n    if (this.state.highScore < this.state.score) {\r\n      localStorage.setItem('snake-game-high-score', this.state.score)\r\n      this.setState({ highScore: this.state.score })\r\n    }\r\n    this.setState({ ...initialState })\r\n    clear(timeoutInstance)\r\n  }\r\n\r\n  onGameStateChange = () => {\r\n    if (this.state.gameState === 'PAUSE') {\r\n      this.onGameContinue()\r\n    } else {\r\n      this.onGamePause()\r\n    }\r\n    buttonVoice.play()\r\n  }\r\n\r\n  changeGameState = (state) => {\r\n    this.setState({ gameState: state })\r\n  }\r\n\r\n  onGamePause = () => {\r\n    clear(timeoutInstance)\r\n    this.changeGameState('PAUSE')\r\n  }\r\n\r\n  onGameContinue = () => {\r\n    this.changeGameState('CONTINUE')\r\n    this.moveSnake()\r\n  }\r\n\r\n  onGameOver = () => {\r\n    clear(timeoutInstance)\r\n    overVoice.play()\r\n    this.changeGameState('OVER')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={[`wrapper ${this.state.aspectRatio ? 'height-100' : 'width-100'}`]}>\r\n        <GameStart\r\n          highScore={this.state.highScore}\r\n          gameState={this.state.gameState}\r\n          onGameStart={this.onGameStart}\r\n        />\r\n\r\n        <div className=\"game-area\">\r\n          <Snake snakeBody={this.state.snakeBody}></Snake>\r\n          <Food food={this.state.food}></Food>\r\n        </div>\r\n\r\n        <Control\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n          direction={this.state.direction}\r\n          clickDirection={direc => this.clickDirection(direc)}\r\n          onGameStateChange={this.onGameStateChange}\r\n          changeSpeed={type => this.changeSpeed(type)}\r\n          gameState={this.state.gameState}\r\n        >\r\n        </Control>\r\n\r\n        <Cover\r\n          gameState={this.state.gameState}\r\n          onGameStateChange={this.onGameStateChange}\r\n          changeGameState={this.changeGameState}\r\n          reStartGame={this.reStartGame}\r\n        >\r\n        </Cover>\r\n\r\n        <GameOver gameState={this.state.gameState} reStartGame={this.reStartGame}></GameOver>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { memo } from 'react'\r\nimport './index.css'\r\n\r\nconst GameStart = memo((props) => {\r\n\r\n  function showScore() {\r\n    let highScoreStr = String(props.highScore)\r\n    return highScoreStr.padStart(5, '0')\r\n  }\r\n\r\n  return (\r\n    <div className=\"start-cover\" style={{ display: props.gameState === 'START' ? 'block' : 'none' }}>\r\n\r\n      <div className=\"game-title\">SNAKE</div>\r\n      <button onClick={props.onGameStart} type=\"button\" className=\"start-btn nes-btn\">START</button>\r\n\r\n      <p className=\"high-score\">High Score</p>\r\n      <p className=\"high-score\">{showScore()}</p>\r\n\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport default GameStart","import { memo } from 'react'\r\nimport './index.css'\r\n\r\nconst Food = memo(function(props) {\r\n  const { food } = props\r\n\r\n  return (\r\n    <span className=\"dot food\" style={{left: `${food[0]}%`, top: `${food[1]}%`}}></span>\r\n  )\r\n})\r\n\r\nexport default Food","\r\nimport { memo } from 'react'\r\n\r\n\r\nconst Snake = memo(function(props) {\r\n\r\n  const { snakeBody } = props\r\n  return (\r\n    <>\r\n      {\r\n        snakeBody.map((dot, dotIndex) => {\r\n          // const style = { left: `${dot[0]}%`, top: `${dot[1]}%` }\r\n          const style = { transform: `translate(${dot[0] * 25}%,${dot[1] * 25}%)` }\r\n            return (\r\n              <span key={dotIndex} className=\"dot snake\" style={style}></span>\r\n            )\r\n          }\r\n        )\r\n      }\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Snake","export default __webpack_public_path__ + \"static/media/control.2102a554.png\";","import { Component } from 'react';\r\nimport control from '../../assert/control.png';\r\nimport './index.css'\r\n\r\nclass Control extends Component {\r\n\r\n  showScore = (score) => {\r\n    let scoreStr = String(score)\r\n    return scoreStr.padStart(5, '0')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"control-box\">\r\n        <div className=\"control-left\">\r\n          <div className={`arrow-${this.props.direction}`}>\r\n            <span><i className=\"iconfont icon-jiantou\"></i></span>\r\n          </div>\r\n\r\n          <div className=\"control-speed\">\r\n            <small>SPEED</small>\r\n            <div style={{ lineHeight: '4.5rem' }}>\r\n              <span onClick={() => this.props.changeSpeed('SPEED_DOWN')}><i className=\"iconfont icon-jian\"></i></span>\r\n              <span onClick={() => this.props.changeSpeed('SPEED_UP')}><i className=\"iconfont icon-jia\"></i></span>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"control-direction-box\">\r\n          <div className=\"button\">\r\n            <div>\r\n              <img onClick={() => this.props.clickDirection('UP')} className=\"control-direction d1\" src={control} alt=\"方向\"></img>\r\n              <img onClick={() => this.props.clickDirection('RIGHT')} className=\"control-direction d4\" src={control} alt=\"方向\"></img>\r\n            </div>\r\n            <div className=\"item2\">\r\n              <img onClick={() => this.props.clickDirection('LEFT')} className=\"control-direction d3\" src={control} alt=\"方向\"></img>\r\n              <img onClick={() => this.props.clickDirection('DOWN')} className=\"control-direction d2\" src={control} alt=\"方向\"></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"control-right\" >\r\n          <div className=\"record\">\r\n            <h6>{this.showScore(this.props.score)}</h6>\r\n            <h6>{this.showScore(this.props.highScore)}</h6>\r\n          </div>\r\n\r\n          <div style={{ display: `${this.props.gameState === 'CONTINUE' ? 'block' : 'none'}` }}>\r\n            <span onClick={this.props.onGameStateChange}><i className=\"iconfont icon-pause\"></i></span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Control","import { memo } from 'react'\r\nimport './index.css'\r\n\r\nconst Cover = memo(function(props) {\r\n  const state = props.gameState\r\n\r\n  return (\r\n    <div className=\"cover\" style={{ display: `${state === 'PAUSE' ? 'block' : 'none'}` }}>\r\n      <span className=\"paused\">PAUSED</span>\r\n\r\n      <div className=\"opera\">\r\n        <span onClick={props.reStartGame}><i className=\"iconfont icon-list\"></i></span>\r\n        <span onClick={props.onGameStateChange}><i className=\"iconfont icon-play\"></i></span>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Cover","import { memo } from 'react'\r\n\r\nconst GameOver = memo(function (props) {\r\n\r\n  const state = props.gameState\r\n\r\n  return (\r\n    <div className=\"cover\" style={{ display: `${state === 'OVER' ? 'block' : 'none'}` }}>\r\n      <span>GAME OVER</span>\r\n\r\n      <div className=\"opera\">\r\n        <span onClick={props.reStartGame}><i className=\"iconfont icon-list\"></i></span>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\nexport default GameOver","export default __webpack_public_path__ + \"static/media/click.3295752d.ogg\";","export default __webpack_public_path__ + \"static/media/gameover.b25dd26e.ogg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport './styles/iconfont.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}